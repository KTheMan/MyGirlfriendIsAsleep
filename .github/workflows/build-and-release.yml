name: Build and Release

on:
  release:
    types:
      - created

jobs:
  build:
    name: Build and Release
    runs-on: ${{ matrix.platform }}
    strategy:
      matrix:
        platform:
          - windows-latest
          - macos-latest
          - ubuntu-latest

    steps:
      - name: Checkout Code
        uses: actions/checkout@v2

      - name: Set up Python
        uses: actions/setup-python@v2
        with:
          python-version: 3.x

      - name: Install Dependencies
        run: |
          if [ "${{ matrix.platform }}" == "ubuntu-latest" ]; then
            # Install necessary dependencies for Linux (if any)
            # Add commands here to install any Linux-specific dependencies
            echo "Installing Linux dependencies..."
          elif [ "${{ matrix.platform }}" == "windows-latest" ]; then
            # Install necessary dependencies for Windows (if any)
            # Add commands here to install any Windows-specific dependencies
            echo "Installing Windows dependencies..."
          elif [ "${{ matrix.platform }}" == "macos-latest" ]; then
            # Install necessary dependencies for macOS (if any)
            # Add commands here to install any macOS-specific dependencies
            echo "Installing macOS dependencies..."
          fi

      - name: Install PyInstaller
        run: pip install pyinstaller

      - name: Build Executable
        run: |
          if [ "${{ matrix.platform }}" == "windows-latest" ]; then
            if [ "${{ matrix.platform }}" == "windows-latest" ]; then
              ICON_OPTION="--icon=icon.ico"
            elif [ "${{ matrix.platform }}" == "macos-latest" ]; then
              ICON_OPTION="--icon=icon.icns"
            else
              ICON_OPTION=""
            fi
            pyinstaller --onefile $ICON_OPTION mygirlfriendisasleep.py
          elif [ "${{ matrix.platform }}" == "macos-latest" ]; then
            if [ "${{ matrix.platform }}" == "windows-latest" ]; then
              ICON_OPTION="--icon=icon.ico"
            elif [ "${{ matrix.platform }}" == "macos-latest" ]; then
              ICON_OPTION="--icon=icon.icns"
            else
              ICON_OPTION=""
            fi
            pyinstaller --onefile $ICON_OPTION mygirlfriendisasleep.py
          fi
        shell: /usr/bin/bash -e {0}
        env:
          pythonLocation: /opt/hostedtoolcache/Python/3.11.5/x64
          LD_LIBRARY_PATH: /opt/hostedtoolcache/Python/3.11.5/x64/lib

      - name: Upload Release Asset (Windows)
        uses: softprops/action-gh-release@v1
        with:
          files: |
            ./dist/mygirlfriendisasleep-windows-latest.exe
          name: mygirlfriendisasleep-windows-latest.exe
          content_type: application/octet-stream

      - name: Upload Release Asset (macOS)
        uses: softprops/action-gh-release@v1
        with:
          files: |
            ./dist/mygirlfriendisasleep-macos-latest
          name: mygirlfriendisasleep-macos-latest
          content_type: application/octet-stream

      - name: Upload Release Asset (Linux)
        uses: softprops/action-gh-release@v1
        with:
          files: |
            ./dist/mygirlfriendisasleep-linux-latest
          name: mygirlfriendisasleep-linux-latest
          content_type: application/octet-stream
